const sentencesData = {
  あ: [
    "あさがおが咲いた。",
    "あめがふってきた。",
    "あんぱんを食べた。",
    "あおいそらをながめた。",
    "あかいふうせんが飛んでいった。",
    "いぬが走っている。",
    "いすにすわった。",
    "いちごを食べた。",
    "いけに魚がいる。",
    "いもうとと遊んだ。",
    "うみへ行った。",
    "うさぎがはねている。",
    "うたを歌った。",
    "うでどけいをつけた。",
    "うちで本を読んだ。",
    "えんぴつで書いた。",
    "えをかざった。",
    "えきまで歩いた。",
    "えがおであいさつした。",
    "えほんを読んだ。"    ,
    "おにぎりを作った。",
    "おおきな声で呼んだ。",
    "おちゃを飲んだ。",
    "お父さんと散歩した。",
    "おはようと言った。"
  ],
  か: [
    "かさを忘れた。",
    "かみなりが鳴った。",
    "かいものに行った。",
    "かぜがつよく吹いた。",
    "かべに絵をかざった。",
    "きつねを見た。",
    "きょうは晴れた。",
    "きものを着た。",
    "きんぎょが泳いでいる。",
    "きゃくが来た。",
    "くるまが通った。",
    "くもが流れた。",
    "くじらがはねた。",
    "くつをぬいだ。",
    "くさをかった。",
    "けしきをながめた。",
    "けがをした。",
    "けんかをやめた。",
    "けむりがのぼった。",
    "けいたいをひらいた。",
    "こえをかけた。",
    "こどもがわらった。",
    "こうえんへ行った。",
    "こまをまわした。",
    "こたえをかいた。"        
  ],
  さ: [
    "さかなをつった。",
    "さくらが咲いた。",
    "さむい風がふいた。",
    "さんぽに行った。",
    "さるが木にのぼった。",
    "しんごうが赤になった。",
    "しゃしんをとった。",
    "しずかに話した。",
    "しおをかけた。",
    "しゅくだいをした。",
    "すいかをたべた。",
    "すなばであそんだ。",
    "すずめがとんだ。",
    "すみっこにかくれた。",
    "すりっぱをはいた。",
    "せんせいにあいさつした。",
    "せみがないている。",
    "せんたくものをほした。",
    "せかいちずを見た。",
    "せきにすわった。",
    "そらをながめた。",
    "そとであそんだ。",
    "そばをたべた。",
    "そらまめをひろった。",
    "そよかぜがふいた。"
  ],
  た: [
    "たこあげをした。",
    "たまごをわった。",
    "たにんと話した。",
    "たべものを分けた。",
    "たけのこが生えた。",
    "ちずをひろげた。",
    "ちいさなこえで話した。",
    "ちょうちょがとんだ。",
    "ちかくのこうえんへ行った。",
    "ちゅういをうけた。",
    "つきがでている。",
    "つくえの上をかたづけた。",
    "つばさをひろげた。",
    "つなひきをした。",
    "つくしをひろった。",
    "てがみをかいた。",
    "てんきがよくなった。",
    "てつぼうをした。",
    "てんらんかいに行った。",
    "てをつないで歩いた。",
    "とりがうたっている。",
    "とけいを見た。",
    "としょかんへ行った。",
    "とおくをながめた。",
    "とまとをうえた。"
  ],
  な: [
    "なつやすみがはじまった。",
    "なべを火にかけた。",
    "なみがしずかだった。",
    "なかよしと遊んだ。",
    "なすびを育てた。",
    "にわに花がさいた。",
    "にんじんをきざんだ。",
    "にこにこ笑った。",
    "にくじゃがをつくった。",
    "にっきを書いた。",
    "ぬいぐるみをならべた。",
    "ぬまにカエルがいた。",
    "ぬのをたたんだ。",
    "ぬりえで遊んだ。",
    "ぬいものをした。",
    "ねこがねている。",
    "ねつがさがった。",
    "ねっしんにべんきょうした。",
    "ねずみがでてきた。",
    "ねっこをほった。",
    "のりものにのった。",
    "のはらでかけまわった。",
    "のうじょうを見学した。",
    "のこぎりで木をきった。",
    "のりで貼った。"
  ],
  は: [
    "はなをかざった。",
    "はやく起きた。",
    "はしをわたった。",
    "はるが来た。",
    "はちが飛んできた。",
    "ひこうきがとんだ。",
    "ひるごはんをつくった。",
    "ひまわりがさきほこった。",
    "ひとりでさんぽした。",
    "ひこうきをみあげた。",
    "ふくをたたんだ。",
    "ふうせんがとんでいった。",
    "ふねにのった。",
    "ふとんをほした。",
    "ふじさんをみた。",
    "へやをそうじした。",
    "へんじをした。",
    "へびがでてきた。",
    "へいわをいのった。",
    "へいたいのふくをみた。",
    "ほしをながめた。",
    "ほたるがひかった。",
    "ほんをかりた。",
    "ほうきではいた。",
    "ほねをけんさした。"
  ],
  ま: [
    "まどをあけた。",
    "まいにち練習した。",
    "まるいお皿をつかった。",
    "まめをたべた。",
    "まちに行った。",
    "みずをくんできた。",
    "みかんをたべた。",
    "みんなでわらった。",
    "みせでかいものした。",
    "みちをあるいた。",
    "むしがとんでいる。",
    "むねがどきどきした。",
    "むこうに山が見えた。",
    "むねに手をあてた。",
    "むりをしないようにした。",
    "めがねをかけた。",
    "めざましがなった。",
    "めいろであそんだ。",
    "めだかをかった。",
    "めんどうをみた。",
    "ももをたべた。",
    "もりであそんだ。",
    "もくようびにあつまった。",
    "ものをたいせつにした。",
    "もちをやいた。"
  ],
  や: [
    "やさいをたべた。",
    "やまにのぼった。",
    "やくそくをまもった。",
    "やねの上にねこがいた。",
    "やさしく話した。",
    "ゆきがふってきた。",
    "ゆうがたにそとへ出た。",
    "ゆめを見た。",
    "ゆびをさした。",
    "ゆうびんを出した。",
    "よるになった。",
    "よていをたてた。",
    "よこになった。",
    "ようふくをきた。",
    "よいしょとかついだ。"
  ],  
  ら: [
    "らっこが泳いでいる。",
    "らっぱをふいた。",
    "らいおんを見た。",
    "らーめんを食べた。",
    "らんどせるをしょった。",
    "りすが木にのぼった。",
    "りんごを食べた。",
    "りゆうを話した。",
    "りかのじっけんをした。",
    "りぼんをむすんだ。",
    "るすばんをした。",
    "るーるをまもった。",
    "るりいろのそらを見た。",
    "るすで電話に出なかった。",
    "るんるんで歩いた。",
    "れいぞうこをあけた。",
    "れもんをしぼった。",
    "れんしゅうをがんばった。",
    "れつに並んだ。",
    "れきしの本を読んだ。",
    "ろうそくに火をつけた。",
    "ろっくんろーるをきいた。",
    "ろてんぶろにはいった。",
    "ろうかをそうじした。",
    "ろくがつに梅雨がくる。"
  ],
  わ: [
    "わたがしを買った。",
    "わにを見た。",
    "わすれものをした。",
    "わかめを食べた。",
    "わらって答えた。"
  ]
};

module.exports = (req, res) => {
  const { kana } = req.query;

  if (!kana) {
    return res.status(400).json({ error: "kana is required" });
  }

  const list = sentencesData[kana];

  if (!list || list.length === 0) {
    return res.status(404).json({ error: "No sentences found" });
  }

  const shuffled = list.sort(() => 0.5 - Math.random());
  const selected = shuffled.slice(0, 3);

  res.status(200).json(selected);
};
